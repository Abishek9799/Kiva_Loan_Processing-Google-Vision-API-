# -*- coding: utf-8 -*-
"""loans_processing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1evo6Y19xZcRfxOfv9n4WV3TG0J4XVqxd
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
import numpy as np 
import requests # to get image from the web
from google.cloud import vision
import io
import os
os.environ["GOOGLE_APPLICATION_CREDENTIALS"]="/content/My First Project-9672f1179b1d.json"

df = pd.read_csv('/content/drive/My Drive/Kiva Dataset/loans.csv')
df.head()

def detect_faces(path):
    """Detects faces in an image."""
    client = vision.ImageAnnotatorClient()

    with io.open(path, 'rb') as image_file:
        content = image_file.read()

    image = vision.Image(content=content)

    response = client.face_detection(image=image)
    faces = response.face_annotations

    # Names of likelihood from google.cloud.vision.enums
    likelihood_name = ('UNKNOWN', 'VERY_UNLIKELY', 'UNLIKELY', 'POSSIBLE',
                       'LIKELY', 'VERY_LIKELY')

    for face in faces:
      anger = likelihood_name[face.anger_likelihood]
      joy = likelihood_name[face.joy_likelihood]
      sorrow = likelihood_name[face.sorrow_likelihood]
      surprise = likelihood_name[face.surprise_likelihood]
      headwear = likelihood_name[face.headwear_likelihood]

      return([anger,joy,sorrow,surprise,headwear])

    if response.error.message:
      raise Exception(
            '{}\nFor more info on error messages, check: '
            'https://cloud.google.com/apis/design/errors'.format(
                response.error.message))

#loadn id, loan name, funded amont, loan amt, image id, 
loan_ID = []
loan_Name = []
funded_Amount = []
loan_Amount = []
image_ID = []
image_Link = []

url = "https://www-kiva-org-0.freetls.fastly.net/img/orig/"

i = 0

for index,rows in df.iterrows():
  if rows['BORROWER_GENDERS'] != 'female':
    continue
  if i==100:
    break
  i+=1
  
  loan_ID.append(rows['LOAN_ID'])
  loan_Name.append(rows['LOAN_NAME'])
  funded_Amount.append(rows['FUNDED_AMOUNT'])
  loan_Amount.append(rows['LOAN_AMOUNT'])
  image_ID.append(rows['IMAGE_ID'])
  image_url = url+str(int(rows['IMAGE_ID']))+".jpg"
  image_Link.append(image_url)

  r = requests.get(image_url)
  name = "image"+str(i)+".jpg"
  print(name)
  with open(name, "wb") as f:
    f.write(r.content)

i = 0
Joy = []
Sorrow = []
Anger = []
Surprise = []
Headwear = []

while i<100:
  i+=1
  name = "image"+str(i)+".jpg"
  response =  detect_faces(name)
  print(name)
  anger,joy,sorrow,surprise,headwear = response
  Joy.append(joy)
  Anger.append(anger)
  Sorrow.append(sorrow)
  Surprise.append(surprise)
  Headwear.append(headwear)

results_dict = {
    "Loan ID": loan_ID,
    "Loan Name": loan_Name,
    "Funded Amount": funded_Amount,
    "Loan Amount": loan_Amount,
    "Image ID": image_ID,
    "Image URL": image_Link,
    "Joy": Joy,
    "Sorrow": Sorrow,
    "Surprise": Surprise,
    "Anger": Anger,
    "HeadWear": Headwear
}
print(len(loan_ID),len(loan_Amount),len(funded_Amount),len(loan_Amount),len(image_ID),len(image_Link),len(Joy),len(Sorrow),len(Surprise),len(Anger),len(Headwear))
new_df=pd.DataFrame(results_dict)

new_df.to_csv("Results.csv",index=False)

new_df.isnull().values.any()